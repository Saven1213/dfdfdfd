import random
from gettext import textdomain


from aiogram import F, Router, Bot
from aiogram.fsm.state import StatesGroup, State
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiosend.loggers import invoice_polling
from typing_extensions import runtime

import Keyboards as kb
from aiogram.utils.keyboard import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiosend import CryptoPay

from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import timedelta, datetime

from bot.db import check_user, add_user, check_trial
from bot.scheduler import end_trial



router = Router()
bot = Bot


scheduler = AsyncIOScheduler(timezone='Europe/Moscow')
scheduler.add_job(end_trial, 'date', run_date=datetime.now() + timedelta(days=3),
                  kwargs={'bot': bot})
scheduler.start()



@router.message(CommandStart())
async def startcmd(message: Message):
    name = message.from_user.first_name
    tg_id = message.from_user.id
    user = check_user(tg_id)
    if user:
        pass
    else:
        add_user(tg_id)

    trial = check_trial(tg_id)



    if trial == 'True':
        await message.answer(f"""
        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å VPN548.

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –Ω–∞–º.

–•–æ—Ç–∏–º –≤–∞–º –ø–æ–¥–∞—Ä–∏—Ç—å 3 –¥–Ω—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞, —á—Ç–æ–±—ã –≤—ã –æ—â—É—Ç–∏–ª–∏ —Å–≤–æ–±–æ–¥—É!

–ù–∞—à —Ç–∞—Ä–∏—Ñ 80‚ÇΩ/–º–µ—Å –∑–∞ 1 —Ç–æ–∫–µ–Ω.

–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à [–∫–∞–Ω–∞–ª](http://t.me/VPN548Me):)
        """, parse_mode='Markdown', reply_markup=kb.main)
    else:
        await message.answer(f"""
            –ü—Ä–∏–≤–µ—Ç, {name}!üëã

            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VPN548.

            –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–µ–Ω—å–≥–∏ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à VPN, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å üåê

            –ï—Å–ª–∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–û–±–µ—â–∞–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂¬ª, –∏ —Å–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è.

            –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, –Ω–∞—à —Ç–∞—Ä–∏—Ñ 80‚ÇΩ/–º–µ—Å –∑–∞ 1 —Ç–æ–∫–µ–Ω.

            –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à [–∫–∞–Ω–∞–ª](http://t.me/VPN548Me):)
                """, parse_mode='Markdown', reply_markup=kb.main)

@router.callback_query(F.data == "deposit")
async def deposit(callback: CallbackQuery, cp: CryptoPay):
    sum1 = '0.8'
    sum2 = '1.6'
    sum3 = '3.2'
    sum4 = '4'
    sum5 = '8'
    sum6 = '16'





    keyboard = InlineKeyboardMarkup(inline_keyboard=[

        [
            # InlineKeyboardButton(text='0.8 usdt.', callback_data=f'sum-{sum1}'),
            InlineKeyboardButton(text='0.8 usdt.', callback_data=f'sum-{sum1}'),
            InlineKeyboardButton(text='1.6 usdt.', callback_data=f'sum-{sum2}'),
            InlineKeyboardButton(text='3.2 usdt.', callback_data=f'sum-{sum3}')
        ],
        [
            InlineKeyboardButton(text='4 usdt.', callback_data=f'sum-{sum4}'),
            InlineKeyboardButton(text='8 usdt.', callback_data=f'sum-{sum5}')
        ],
        [
            InlineKeyboardButton(text='16 usdt.', callback_data=f'sum-{sum6}')
        ],
        [
            InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—É–º–º—É', callback_data='sum7c')
        ],
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='to_main')
        ]
    ])

    await callback.message.edit_text('''–í—ã–±–µ—Ä–µ—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è

–ù–∞–ø–æ–º–Ω—é, –Ω–∞—à —Ç–∞—Ä–∏—Ñ: 1 –∫–æ–Ω—Ñ–∏–≥ - 0.8 usdt/–º–µ—Å.''', reply_markup=keyboard)

@router.callback_query(F.data.split("-")[0] == 'sum')
async def get_invoice(callback: CallbackQuery, cp: CryptoPay):
    data = callback.data.split('-')[1]
    invoice = await cp.create_invoice(float(data), "USDT")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å CryptoBot', url=invoice.mini_app_invoice_url)
        ],
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back1')
        ]
    ])


    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', reply_markup=keyboard)






#     await callback.message.edit_text(f"""
# –°—á–µ—Ç ‚Ññ{invoice_number}.
#
# –£ –≤–∞—Å –µ—Å—Ç—å 10 –º–∏–Ω—É—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å—á—ë—Ç –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω.
#     """)
#
# async def generate_numeric_invoice_number(length=16):
#     """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞, —Å–æ—Å—Ç–æ—è—â–∏–π —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä."""
#     return ''.join(random.choices('0123456789', k=length))

class Amount(StatesGroup):
    amount = State()

@router.callback_query(F.data == 'sum7c')
async def sumc_deposit(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Amount.amount)
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back1')
        ]
    ])
    await callback.message.edit_text("""
    –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:\n
    –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 80 —Ä—É–±.
    """, reply_markup=keyboard)

@router.callback_query(F.data == 'back1')
async def back1(callback: CallbackQuery, state: FSMContext):
    sum1 = '0.8'
    sum2 = '1.6'
    sum3 = '3.2'
    sum4 = '4'
    sum5 = '8'
    sum6 = '16'

    keyboard = InlineKeyboardMarkup(inline_keyboard=[

        [
            InlineKeyboardButton(text='0.8 usdt.', callback_data=f'sum-{sum1}'),
            InlineKeyboardButton(text='1.6 usdt.', callback_data=f'sum-{sum2}'),
            InlineKeyboardButton(text='3.2 usdt.', callback_data=f'sum-{sum3}')
        ],
        [
            InlineKeyboardButton(text='4 usdt.', callback_data=f'sum-{sum4}'),
            InlineKeyboardButton(text='8 usdt.', callback_data=f'sum-{sum5}')
        ],
        [
            InlineKeyboardButton(text='16 usdt.', callback_data=f'sum-{sum6}')
        ],
        [
            InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—É–º–º—É', callback_data='sum7c')
        ],
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='to_main')
        ]
    ])
    await state.clear()
    await callback.message.edit_text("""
    –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:\n
    –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 80 —Ä—É–±.
    """, reply_markup=keyboard)

@router.message(Amount.amount)
async def enter_amount(message: Message, state: FSMContext, cp: CryptoPay):

    data = message.text

    try:
        new_data = float(data)
        if type(new_data) == float:
            invoice = await cp.create_invoice(float(data), 'USDT')
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å CryptoBot', url=invoice.mini_app_invoice_url)
                ],
                [
                    InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back1')
                ]
            ])
            await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', reply_markup=keyboard)
        else:
            pass
    except ValueError:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ USDT')


    # try:
    #     if type(float(data)) == float:
    #         invoice = cp.create_invoice(float(data), 'USDT')
    #         keyboard = InlineKeyboardMarkup(inline_keyboard=[
    #             [
    #                 InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å CryptoBot', url=invoice.mini_app_invoice_url)
    #             ]
    #         ])
    #
    #         await message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', reply_markup=keyboard)
    #     else:
    #         pass
    # except:
    #     await message.answer('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ USDT')



@router.callback_query(F.data == 'to_main')
async def main_page(callback: CallbackQuery):
    name = callback.from_user.first_name
    await callback.message.edit_text(f"""
        –ü—Ä–∏–≤–µ—Ç, {name}!üëã

    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VPN548.

    –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–µ–Ω—å–≥–∏ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à VPN, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å üåê

    –ï—Å–ª–∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–û–±–µ—â–∞–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂¬ª, –∏ —Å–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è.

    –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, –Ω–∞—à —Ç–∞—Ä–∏—Ñ 80‚ÇΩ/–º–µ—Å –∑–∞ 1 —Ç–æ–∫–µ–Ω.

    –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à [–∫–∞–Ω–∞–ª](http://t.me/VPN548Me):)
        """, parse_mode='Markdown', reply_markup=kb.main)

@router.callback_query(F.data == 'help_config')
async def help_config(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='to_main')
        ]
    ])

    await callback.message.edit_text("""
    1. –°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline:


[–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è iOS](https://itunes.apple.com/app/outline-app/id1356177741)
[–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è macOS](https://itunes.apple.com/app/outline-app/id1356178125)
[–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Windows](https://s3.amazonaws.com/outline-releases/client/windows/stable/Outline-Client.exe)
[–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Linux](https://s3.amazonaws.com/outline-releases/client/linux/stable/Outline-Client.AppImage)
[–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Android](https://play.google.com/store/apps/details?id=org.outline.android.client)
[–î–æ–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Android](https://s3.amazonaws.com/outline-releases/client/android/stable/Outline-Client.apk)

2. –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å ss://, –∞ –∑–∞—Ç–µ–º —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ.

3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–ª–∏–µ–Ω—Ç Outline. –ï—Å–ª–∏ –≤–∞—à –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è". –ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –≤—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –≤ –ø–æ–ª–µ –∏ –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è".

–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–±–æ–¥–Ω–æ–º—É –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ß—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É, –≤–≤–µ–¥–∏—Ç–µ –≤ Google –ü–æ–∏—Å–∫–µ —Ñ—Ä–∞–∑—É "–ö–∞–∫–æ–π —É –º–µ–Ω—è IP-–∞–¥—Ä–µ—Å". IP-–∞–¥—Ä–µ—Å, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ Google, –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å IP-–∞–¥—Ä–µ—Å–æ–º –≤ –∫–ª–∏–µ–Ω—Ç–µ Outline.
    """, parse_mode='Markdown', reply_markup=keyboard)

@router.callback_query(F.data == 'my_profile')
async def profile(callback: CallbackQuery):
    tg_id = callback.from_user.id
    await callback.message.edit_text(f"""
    –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n
    –ú–æ–π Telegram ID: {tg_id} 
    """, reply_markup=kb.profile_keyboard)

@router.callback_query(F.data == 'gifts')
async def gifts(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data='send_gift')
        ],
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='my_profile')
        ]
    ])

    await callback.message.edit_text('–ú–æ–∏ –ø–æ–¥–∞—Ä–∫–∏', reply_markup=keyboard)



@router.callback_query(F.data == 'referals')
async def referals(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='my_profile')
        ]
    ])

    await callback.message.edit_text("""
    üí∞ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è!\n
\n
–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∑–∞ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n
\n
‚Ä¢ –ü—Ä–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–∏ –ø–µ—Ä–≤–æ–≥–æ –¥—Ä—É–≥–∞ –≤–∞–º –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∞ —Å—É–º–º–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å, —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–∞—è 5 –¥–Ω—è–º.\n
\n
‚Ä¢ –ü—Ä–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–∏ –≤—Ç–æ—Ä–æ–≥–æ –¥—Ä—É–≥–∞ ‚Äî 3 –¥–Ω—è.\n
\n
‚Ä¢ –ü—Ä–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–∏ —Ç—Ä–µ—Ç—å–µ–≥–æ –¥—Ä—É–≥–∞ ‚Äî 1 –¥–µ–Ω—å.\n
\n
–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:
t.me/VPN548Bot?start=r-873034839
    """, reply_markup=keyboard)


